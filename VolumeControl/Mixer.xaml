<Window
    x:Class="VolumeControl.Mixer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Collections="clr-namespace:VolumeControl.WPF.Collections;assembly=VolumeControl.WPF"
    xmlns:autocomplete="clr-namespace:WPFTextBoxAutoComplete;assembly=WPFTextBoxAutoComplete"
    xmlns:b="clr-namespace:VolumeControl.WPF.Bindings;assembly=VolumeControl.WPF"
    xmlns:behaviour="clr-namespace:XamlTimers;assembly=XamlTimers"
    xmlns:controls="clr-namespace:VolumeControl.Controls"
    xmlns:conv="clr-namespace:VolumeControl.WPF.Converters;assembly=VolumeControl.WPF"
    xmlns:core="clr-namespace:VolumeControl.Core;assembly=VolumeControl.Core"
    xmlns:ctrlz="urn:controlzex"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="clr-namespace:VolumeControl.WPF.Extensions;assembly=VolumeControl.WPF"
    xmlns:helpers="clr-namespace:VolumeControl.Helpers"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:input="clr-namespace:VolumeControl.Core.Input;assembly=VolumeControl.Core"
    xmlns:loc="clr-namespace:CodingSeb.Localization;assembly=CodingSeb.Localization"
    xmlns:local="clr-namespace:VolumeControl"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sdk="clr-namespace:VolumeControl.SDK;assembly=VolumeControl.SDK"
    xmlns:sys="clr-namespace:System;assembly=netstandard"
    xmlns:vm="clr-namespace:VolumeControl.ViewModels"
    x:Name="window"
    Title="Volume Control"
    AllowsTransparency="True"
    Closing="Window_Closing"
    DataContext="{RelativeSource Self}"
    FontFamily="{StaticResource InterFont}"
    FontSize="{StaticResource GlobalFontSize}"
    Icon="/Resources/icons/iconSilvered.ico"
    Initialized="Window_Initialized"
    ResizeMode="CanMinimize"
    SizeToContent="WidthAndHeight"
    UseLayoutRounding="True"
    WindowStyle="None"
    mc:Ignorable="d">

    <!--  ( Static Resources )  -->
    <Window.Resources>
        <ResourceDictionary>
            <conv:SquaredCornerRadiusConverter x:Key="SquaredCornerRadiusConverter" Squared="All" />

            <sys:Double x:Key="CaptionHeight">22</sys:Double>

            <!--  Label  -->
            <Style x:Key="LabelStyle" TargetType="Label">
                <Style.Triggers>
                    <!--  Change the color of label text when disabled to something visible  -->
                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                        <Setter Property="Foreground" Value="LightGray" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="Background" Value="#00000000" />
                <Setter Property="Foreground" Value="WhiteSmoke" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>
            <!--  Mixer Headers  -->
            <Style x:Key="MixerHeadersStyle" TargetType="DataGridColumnHeader">
                <Setter Property="FontSize" Value="{StaticResource GlobalFontSize}" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Height" Value="24" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="WhiteSmoke" />
                <Setter Property="Background" Value="{StaticResource HeaderBackgroundBrush}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>
            <!--  Border Style  -->
            <Style x:Key="BorderStyle" TargetType="Border">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Gainsboro" />
            </Style>
            <!--  Mixer Cell  -->
            <Style TargetType="{x:Type DataGridCell}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="WhiteSmoke" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <Trigger Property="IsSelected" Value="False">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="WhiteSmoke" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <!--  Focused  -->
                    <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource SelectionBorderBrush}" />
                        <Setter Property="BorderThickness" Value="{StaticResource SelectionBorderThickness}" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="FontSize" Value="{StaticResource GlobalFontSize}" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource CustomFocusVisualStyle}" />
            </Style>
            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="BorderThickness" Value="0" />
            </Style>
            <!--  DataGridStyle  -->
            <Style x:Key="DataGridStyle" TargetType="DataGrid">
                <Setter Property="Background" Value="#00000000" />
                <Setter Property="RowBackground" Value="{StaticResource GridRowBrush}" />
                <Setter Property="AlternatingRowBackground" Value="{StaticResource GridRowAltBrush}" />
                <Setter Property="ColumnHeaderStyle" Value="{StaticResource MixerHeadersStyle}" />
                <Setter Property="AlternationCount" Value="1" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="HeadersVisibility" Value="Column" />
                <Setter Property="SelectionUnit" Value="Cell" />
                <Setter Property="SelectionMode" Value="Single" />
                <Setter Property="GridLinesVisibility" Value="None" />
                <Setter Property="Margin" Value="5" />
            </Style>
            <!--  TabControl  -->
            <Style x:Key="TabControlStyle" TargetType="ctrlz:TabControlEx">
                <Setter Property="Background" Value="{StaticResource TabBackgroundBrush}" />
                <Setter Property="Foreground" Value="WhiteSmoke" />
            </Style>

            <!--  EventTypeOptions (VolumeControl.Log.BindableEventTypeOptions)  -->
            <Collections:LogEventTypeFilter x:Key="EventTypeOptions" PropertyChanged="Handle_LogFilterChanged" />


            <!--  SectionStyle (Settings/Debug)  -->
            <Style
                x:Key="SectionStyle"
                BasedOn="{StaticResource BorderStyle}"
                TargetType="{x:Type Border}">
                <Setter Property="Margin" Value="3" />
                <Setter Property="Background" Value="#E02F2F2F" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="{StaticResource AccentForeground}" />
                <Setter Property="CornerRadius" Value="9" />
            </Style>
            <!--  HeaderLabelStyle (Settings/Debug)  -->
            <Style
                x:Key="HeaderLabelStyle"
                BasedOn="{StaticResource LabelStyle}"
                TargetType="{x:Type Label}">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="FontSize" Value="13" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{StaticResource HeaderForegroundBrush}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>
            <!--  SectionSubGridStyle (Settings/Debug)  -->
            <Style x:Key="SectionSubGridStyle" TargetType="{x:Type Grid}">
                <Setter Property="Margin" Value="5,3" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>
            <Style BasedOn="{StaticResource ExpanderStyle}" TargetType="{x:Type Expander}" />
            <!--  Tab Item Appearance  -->
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border
                                    Name="Border"
                                    Margin="1,0"
                                    BorderThickness="0"
                                    CornerRadius="{Binding Source={StaticResource RoundedControlCorner}, Converter={StaticResource SquaredCornerRadiusConverter}, ConverterParameter={x:Static conv:Corner.Bottom}}">
                                    <ContentPresenter
                                        x:Name="ContentSite"
                                        Margin="10,2"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Header"
                                        TextBlock.Foreground="{TemplateBinding Foreground}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--  SELECTED TAB APPEARANCE:  -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource TabBackgroundBrush}" />
                                    <Setter TargetName="Border" Property="Margin" Value="1,-1" />
                                    <Setter TargetName="ContentSite" Property="TextBlock.FontWeight" Value="Bold" />
                                    <Setter TargetName="ContentSite" Property="TextBlock.FontSize" Value="13" />
                                </Trigger>
                                <!--  UNSELECTED TAB APPEARANCE:  -->
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#303030" />
                                    <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="LightGray" />
                                    <Setter TargetName="ContentSite" Property="TextBlock.FontWeight" Value="Medium" />
                                    <Setter TargetName="ContentSite" Property="TextBlock.FontSize" Value="11" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="WhiteSmoke" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource CustomFocusVisualStyle}" />
            </Style>

            <!--  Hyperlink  -->
            <Style TargetType="{x:Type Hyperlink}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource SelectionBorderBrush}" />
                        <Setter Property="TextDecorations" Value="Underline" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="TextDecorations" Value="None" />
                <Setter Property="BaselineAlignment" Value="Baseline" />
                <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            </Style>
            <!--  ListBox style  -->
            <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{StaticResource TextBoxBackground}" />
                <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource CustomFocusVisualStyle}" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CustomFocusVisualStyle}" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ComboBox Templates  -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Grid Name="cmbGrid">
                    <Grid.Resources>
                        <Style x:Key="{x:Type Path}" TargetType="{x:Type Path}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                                    <Setter Property="Fill" Value="{StaticResource AccentGradientDisabled}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                                    <Setter Property="Fill" Value="{StaticResource AccentGradientMouseOver}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                    <Setter Property="Fill" Value="{StaticResource AccentGradientIsPressed}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <!--  Having this border here allows the dropdown to be triggered by clicking anywhere on the control  -->
                    <Border
                        Grid.ColumnSpan="2"
                        Background="Transparent"
                        BorderThickness="0" />
                    <Path
                        x:Name="Arrow"
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M 0 0 L 4 5 L 8 0 Z"
                        Fill="{StaticResource AccentGradient}"
                        IsEnabled="{Binding IsMouseOver, ElementName=cmbGrid}" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
                <Border
                    x:Name="PART_ContentHost"
                    Background="{TemplateBinding Background}"
                    BorderThickness="0"
                    Focusable="False" />
            </ControlTemplate>
            <!--  ComboBox Style  -->
            <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                        <Setter Property="Foreground" Value="#404040" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="Foreground" Value="WhiteSmoke" />
                    </DataTrigger>
                    <!--  Focused  -->
                    <DataTrigger Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource SelectionBorderBrush}" />
                        <Setter Property="BorderThickness" Value="{StaticResource SelectionBorderThickness}" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="MinHeight" Value="20" />
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <Border
                                    Name="BackgroundBorder"
                                    Background="{StaticResource TextBoxBackground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{StaticResource RoundedControlCorner}" />
                                <Grid Margin="1">
                                    <ToggleButton
                                        Name="ToggleButton"
                                        Grid.Column="2"
                                        ClickMode="Press"
                                        Focusable="false"
                                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                        Template="{StaticResource ComboBoxToggleButton}" />
                                    <ContentPresenter
                                        Name="ContentSite"
                                        Margin="3,3,23,3"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding SelectionBoxItem}"
                                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                        IsHitTestVisible="False" />
                                    <TextBox
                                        x:Name="PART_EditableTextBox"
                                        Margin="3,3,23,3"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Background="#0000"
                                        Focusable="True"
                                        IsReadOnly="{TemplateBinding IsReadOnly}"
                                        Style="{x:Null}"
                                        Template="{StaticResource ComboBoxTextBox}"
                                        Visibility="Hidden" />
                                    <Popup
                                        Name="Popup"
                                        AllowsTransparency="True"
                                        Focusable="False"
                                        IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                        Placement="Bottom"
                                        PopupAnimation="Slide">
                                        <Grid
                                            Name="DropDown"
                                            MinWidth="{TemplateBinding ActualWidth}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                            SnapsToDevicePixels="True">
                                            <Border
                                                x:Name="DropDownBorder"
                                                Padding="5"
                                                Background="{StaticResource TextBoxBackground}"
                                                BorderBrush="{StaticResource BorderBrush}"
                                                BorderThickness="0"
                                                CornerRadius="10">
                                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                                    <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                </ScrollViewer>
                                            </Border>
                                        </Grid>
                                    </Popup>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="#282828" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource TextBoxBackgroundDisabled}" />
                                    <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{StaticResource BorderBrush}" />
                                    <Setter TargetName="BackgroundBorder" Property="BorderThickness" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="3" />
                <Setter Property="BorderBrush" Value="Gainsboro" />
                <Setter Property="AlternationCount" Value="1" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="IsTextSearchCaseSensitive" Value="False" />
                <Setter Property="Margin" Value="0,1,0,1" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="IsEnabled" Value="True" />
            </Style>

            <!--  KeyOptions  -->
            <helpers:KeyOptions x:Key="KeyOptions" />

            <!--  URIs  -->
            <sys:Uri x:Key="VolumeControlRepository">https://github.com/radj307/volume-control</sys:Uri>
            <sys:Uri x:Key="VolumeControlReleases">https://github.com/radj307/volume-control/releases</sys:Uri>
            <sys:Uri x:Key="VolumeControlLatestRelease">https://github.com/radj307/volume-control/releases/latest</sys:Uri>
            <sys:Uri x:Key="VolumeControlBugReport">https://github.com/radj307/volume-control/issues/new?assignees=radj307&amp;labels=bug%2Ctriage&amp;template=BugReport.yml&amp;title=%5BBUG%5D+</sys:Uri>

            <ImageSource x:Key="VolumeControlIcon">pack://application:,,,/Resources/images/icon.png</ImageSource>

        </ResourceDictionary>
    </Window.Resources>
    <!--  ( Window Background )  -->
    <Window.Background>
        <SolidColorBrush Color="{StaticResource WindowBackgroundColor}" />
    </Window.Background>

    <!--  ( Element Layout )  -->
    <!--  Window Border  -->
    <Border
        BorderBrush="{StaticResource WindowBorderBrush}"
        BorderThickness="{StaticResource WindowBorderThickness}"
        CornerRadius="{StaticResource RoundedWindowCorner}">
        <VirtualizingStackPanel FlowDirection="LeftToRight" Orientation="Vertical">
            <!--  v Caption Bar v  -->
            <Grid Name="CaptionBar" Height="{StaticResource CaptionHeight}">
                <!--  RESOURCES  -->
                <Grid.Resources>
                    <!--  Caption Button Style:  -->
                    <Style x:Key="CaptionButtonStyle" TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border
                                        x:Name="ButtonMouseOver"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        RenderOptions.EdgeMode="Aliased"
                                        Style="{StaticResource BorderStyle}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ButtonMouseOver" Property="Background" Value="#22FFFFFF" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="ButtonMouseOver" Property="Background" Value="#44FFFFFF" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="Width" Value="{StaticResource CaptionHeight}" />
                        <Setter Property="Height" Value="{StaticResource CaptionHeight}" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FontWeight" Value="Black" />
                        <Setter Property="Background" Value="#00000000" />
                        <Setter Property="Foreground" Value="LightGray" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="IsHitTestVisible" Value="true" />
                    </Style>
                    <Style
                        x:Key="CaptionTextBlockStyle"
                        BasedOn="{StaticResource TextBlockStyle}"
                        TargetType="{x:Type TextBlock}">
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Right" />
                    </Style>
                    <Style x:Key="CaptionHyperlinkStyle" TargetType="{x:Type Hyperlink}">
                        <Setter Property="TextDecorations" Value="None" />
                        <Setter Property="BaselineAlignment" Value="Center" />
                        <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
                    </Style>
                </Grid.Resources>
                <!--  COLUMN DEFINITIONS  -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!--  LAYOUT  -->

                <!--  Title  -->
                <TextBlock
                    Grid.Column="1"
                    Margin="7,0"
                    VerticalAlignment="Center"
                    FontWeight="SemiBold"
                    Foreground="LightGray"
                    Text="{Tr 'VolumeControl.MainWindow.CaptionBar.Title.Content',
                              DefaultText='Volume Control'}" />
                <!--  Update Icon  -->
                <TextBlock
                    Grid.Column="3"
                    FlowDirection="RightToLeft"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    ToolTip="{Binding UpdateVersion, Source={StaticResource Settings}, Mode=OneWay}"
                    Visibility="{Binding UpdateAvailable, Source={StaticResource Settings}, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Hyperlink
                        extensions:HyperlinkExtensions.OpensInBrowser="True"
                        KeyboardNavigation.IsTabStop="False"
                        NavigateUri="{StaticResource VolumeControlLatestRelease}"
                        TextDecorations="None">
                        <TextBlock
                            FontSize="10"
                            FontWeight="Regular"
                            Foreground="{StaticResource UpdateIconBrush}"
                            Style="{StaticResource CaptionTextBlockStyle}"
                            Text="▲" />
                    </Hyperlink>
                </TextBlock>
                <!--  Version label  -->
                <Label
                    x:Name="versionLabel"
                    Grid.Column="4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    FontFamily="Verdana"
                    FontSize="10.6"
                    FontWeight="Black"
                    Foreground="LightGray"
                    Style="{StaticResource LabelStyle}">
                    <!--  This hyperlink must NOT use the 'CaptionHyperlinkStyle' or it'll lose its dynamic-underlining  -->
                    <Hyperlink
                        extensions:HyperlinkExtensions.OpensInBrowser="True"
                        KeyboardNavigation.IsTabStop="False"
                        NavigateUri="{StaticResource VolumeControlRepository}">
                        <TextBlock
                            Foreground="LightGray"
                            Style="{StaticResource CaptionTextBlockStyle}"
                            Text="{Binding CurrentVersionString, Source={StaticResource Settings}}" />
                    </Hyperlink>
                </Label>
                <!--  Bug Report Icon  -->
                <Button
                    Grid.Column="5"
                    Cursor="Hand"
                    FontSize="10"
                    FontWeight="Thin"
                    IsTabStop="False"
                    Style="{StaticResource CaptionButtonStyle}"
                    ToolTip="{Tr 'VolumeControl.MainWindow.CaptionBar.BugReport.Tooltip',
                                 DefaultText='Report a Bug'}">
                    <Hyperlink
                        extensions:HyperlinkExtensions.OpensInBrowser="True"
                        KeyboardNavigation.IsTabStop="False"
                        NavigateUri="{StaticResource VolumeControlBugReport}"
                        Style="{StaticResource CaptionHyperlinkStyle}">
                        <TextBlock Style="{StaticResource CaptionTextBlockStyle}" Text="{Tr 'VolumeControl.MainWindow.CaptionBar.BugReport.Content', DefaultText='✏'}" />
                    </Hyperlink>
                </Button>
                <!--  Minimize Icon  -->
                <Button
                    Grid.Column="6"
                    Click="Handle_MinimizeClick"
                    Content="―"
                    Cursor="Hand"
                    IsTabStop="False"
                    Style="{StaticResource CaptionButtonStyle}" />
                <!--  Maximize Icon  -->
                <Button
                    Grid.Column="7"
                    Click="Handle_MaximizeClick"
                    Content="□"
                    Cursor="Hand"
                    IsTabStop="False"
                    Style="{StaticResource CaptionButtonStyle}"
                    Visibility="Collapsed" />
                <!--  Close Icon  -->
                <Button
                    Grid.Column="8"
                    Click="Handle_CloseClick"
                    Content="❌"
                    Cursor="Hand"
                    IsTabStop="False"
                    Style="{StaticResource CaptionButtonStyle}" />
            </Grid>
            <!--  ^ Caption Bar ^  -->


            <!--  Tab Controller  -->
            <ctrlz:TabControlEx
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                MoveFocusToContentWhenSelectionChanges="False"
                Style="{StaticResource TabControlStyle}">


                <!--  ▼ Mixer Tab ▼  -->
                <TabItem Name="MixerTab" Header="{Tr 'VolumeControl.MainWindow.Mixer.TabHeader', DefaultText='Mixer'}">
                    <TabItem.Resources>
                        <Style
                            x:Key="SectionStyle"
                            BasedOn="{StaticResource BorderStyle}"
                            TargetType="{x:Type Border}">
                            <Setter Property="Background" Value="#EE383838" />
                            <Setter Property="BorderThickness" Value="3" />
                            <Setter Property="BorderBrush" Value="#EE404040" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Padding" Value="2" />
                            <Setter Property="Margin" Value="0,1,0,4" />
                        </Style>
                    </TabItem.Resources>

                    <Border
                        Margin="0,2,0,0"
                        BorderBrush="{StaticResource TabBackgroundBrush}"
                        BorderThickness="2,0,2,2">
                        <VirtualizingStackPanel FlowDirection="LeftToRight" Orientation="Vertical">
                            <!--  Target Selection Row  -->
                            <Grid
                                x:Name="targetSelectionRow"
                                Margin="3,5,3,3"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Border
                                    x:Name="targetboxBorder"
                                    Padding="4"
                                    Background="{StaticResource TextBoxBackground}"
                                    BorderBrush="{StaticResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="{StaticResource RoundedControlCorner}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox
                                            x:Name="targetbox"
                                            autocomplete:AutoCompleteBehavior.AutoCompleteItemsSource="{Binding TargetAutoCompleteSource, Source={StaticResource Settings}}"
                                            autocomplete:AutoCompleteBehavior.AutoCompleteStringComparison="OrdinalIgnoreCase"
                                            d:Text=""
                                            AutoWordSelection="True"
                                            Background="#0000"
                                            BorderThickness="0"
                                            Foreground="{StaticResource TextBoxForeground}"
                                            HorizontalScrollBarVisibility="Hidden"
                                            IsEnabled="{Binding IsChecked, ElementName=cbLockTargetSelection, Converter={StaticResource InvertConverter}}"
                                            IsInactiveSelectionHighlightEnabled="True"
                                            MouseDoubleClick="Handle_TargetNameBoxDoubleClick"
                                            Style="{StaticResource TextBoxStyle}"
                                            Text="{Binding AudioAPI.Target, Source={StaticResource Settings}, UpdateSourceTrigger=LostFocus}" />
                                        <TextBlock
                                            Margin="5,0"
                                            Style="{StaticResource WatermarkTextBlockStyle}"
                                            Text="{Tr 'VolumeControl.MainWindow.Mixer.TargetBox.Watermark',
                                                      DefaultText='Process ID or Name'}"
                                            Visibility="{Binding Text.IsEmpty, ElementName=targetbox, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <CheckBox
                                            x:Name="cbLockTargetSelection"
                                            Grid.Column="2"
                                            Margin="3"
                                            Content="{Tr 'VolumeControl.MainWindow.Mixer.TargetBox.LockTarget',
                                                         DefaultText='Lock'}"
                                            DataContext="{StaticResource Settings}"
                                            IsChecked="{Binding AudioAPI.LockSelectedSession, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                                            Style="{StaticResource CheckBoxStyle}" />
                                    </Grid>
                                </Border>
                            </Grid>

                            <!--  Mixer DataGrid Row  -->
                            <Border
                                x:Name="MixerDataGridOuterBorder"
                                Padding="0"
                                BorderThickness="0"
                                Style="{StaticResource BorderStyle}">
                                <Grid>
                                    <Border Name="MixerGridMask" Style="{StaticResource RoundBorderMaskStyle}" />
                                    <DataGrid
                                        x:Name="MixerGrid"
                                        d:ItemsSource="{x:Null}"
                                        AutoGenerateColumns="False"
                                        DataContext="{StaticResource Settings}"
                                        ItemsSource="{Binding AudioAPI.Sessions}"
                                        Style="{StaticResource DataGridStyle}">
                                        <DataGrid.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=MixerGridMask}" />
                                        </DataGrid.OpacityMask>
                                        <DataGrid.Columns>
                                            <!--  PID  -->
                                            <DataGridTemplateColumn
                                                Width="Auto"
                                                Header="{Tr 'VolumeControl.MainWindow.Mixer.MixerGrid.PID.Header',
                                                            DefaultText='PID'}"
                                                IsReadOnly="True">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBlock
                                                            Margin="3,0"
                                                            VerticalAlignment="Center"
                                                            Style="{StaticResource TextBlockStyle}"
                                                            Text="{Binding PID, Mode=OneWay}" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--  Name  -->
                                            <DataGridTemplateColumn
                                                x:Name="dgSessionNameColumn"
                                                Width="Auto"
                                                MinWidth="150"
                                                Header="{Tr 'VolumeControl.MainWindow.Mixer.MixerGrid.Name.Header',
                                                            DefaultText='Name'}"
                                                IsReadOnly="False">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="20" />
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>
                                                            <Image
                                                                HorizontalAlignment="Left"
                                                                Source="{Binding Icon, Mode=OneTime}"
                                                                Style="{StaticResource IconImageStyle}"
                                                                Visibility="{Binding ShowIcons, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                            <TextBox
                                                                Grid.Column="1"
                                                                HorizontalAlignment="Stretch"
                                                                VerticalAlignment="Center"
                                                                Background="#0000"
                                                                BorderThickness="0"
                                                                Style="{StaticResource TextBoxStyle}"
                                                                Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--  Mute  -->
                                            <DataGridTemplateColumn Width="40" Header="{Tr 'VolumeControl.MainWindow.Mixer.MixerGrid.Mute.Header', DefaultText='Mute'}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <CheckBox IsChecked="{Binding Muted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxStyle}" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--  Volume  -->
                                            <DataGridTemplateColumn Width="170" Header="{Tr 'VolumeControl.MainWindow.Mixer.MixerGrid.Volume.Header', DefaultText='Volume'}">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid Margin="1" VerticalAlignment="Center">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <!--  Slider  -->
                                                                <ColumnDefinition Width="*" />
                                                                <!--  Divider  -->
                                                                <ColumnDefinition Width="2" />
                                                                <!--  TextBox  -->
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <!--  Slider  -->
                                                            <Slider
                                                                x:Name="dgVolumeSlider"
                                                                Grid.Column="0"
                                                                LargeChange="5"
                                                                Maximum="100"
                                                                Minimum="0"
                                                                SmallChange="1"
                                                                Tag="{Binding PeakMeterValue, Mode=OneWay}"
                                                                Value="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                                <i:Interaction.Behaviors>
                                                                    <behaviour:IntervalUpdateBinding
                                                                        EnableTimer="{Binding ShowPeakMeters, Source={StaticResource Settings}}"
                                                                        Interval="{Binding PeakMeterUpdateIntervalMs, Source={StaticResource Settings}}"
                                                                        Property="{x:Static FrameworkElement.TagProperty}" />
                                                                </i:Interaction.Behaviors>
                                                            </Slider>
                                                            <!--  TextBox  -->
                                                            <TextBox
                                                                x:Name="dgVolumeTextBox"
                                                                Grid.Column="2"
                                                                MinWidth="30"
                                                                Background="#0000"
                                                                BorderBrush="#0000"
                                                                BorderThickness="0"
                                                                Style="{StaticResource TextBoxStyle}"
                                                                Text="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <!--  Select  -->
                                            <DataGridTemplateColumn
                                                Width="Auto"
                                                Header=""
                                                IsReadOnly="True">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Button
                                                            Padding="6,0"
                                                            Click="Handle_ProcessSelectClick"
                                                            Content="{Tr 'VolumeControl.MainWindow.Mixer.MixerGrid.Select.Button',
                                                                         DefaultText='Select'}"
                                                            IsEnabled="{Binding IsChecked, ElementName=cbLockTargetSelection, Converter={StaticResource InvertConverter}}" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </Border>
                        </VirtualizingStackPanel>
                    </Border>
                </TabItem>
                <!--  ▲ Mixer Tab ▲  -->


                <!--  ▼ Hotkeys Tab ▼  -->
                <TabItem Name="HotkeysTab" Header="{Tr 'VolumeControl.MainWindow.Hotkeys.TabHeader', DefaultText='Hotkeys'}">
                    <!--  HotkeyGrid  -->
                    <VirtualizingStackPanel FlowDirection="LeftToRight" Orientation="Vertical">
                        <Border
                            Padding="0"
                            BorderBrush="LightGray"
                            BorderThickness="0"
                            Style="{StaticResource BorderStyle}">
                            <Grid>
                                <Border
                                    Name="HotkeyGridMask"
                                    Padding="3"
                                    Style="{StaticResource RoundBorderMaskStyle}" />

                                <DataGrid
                                    x:Name="HotkeyGrid"
                                    d:ItemsSource="{x:Null}"
                                    AutoGenerateColumns="False"
                                    BorderThickness="0"
                                    CanUserReorderColumns="False"
                                    CanUserSortColumns="False"
                                    DataContext="{Binding HotkeyAPI.Hotkeys, Source={StaticResource Settings}}"
                                    ItemsSource="{Binding UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource DataGridStyle}">
                                    <DataGrid.OpacityMask>
                                        <VisualBrush Visual="{Binding ElementName=HotkeyGridMask}" />
                                    </DataGrid.OpacityMask>

                                    <DataGrid.Columns>
                                        <!--  Active  -->
                                        <DataGridTemplateColumn Width="Auto" CanUserResize="False">
                                            <DataGridTemplateColumn.Header>
                                                <CheckBox
                                                    Margin="3,0,0,0"
                                                    d:IsChecked="{x:Null}"
                                                    Click="Handle_ThreeStateCheckboxClick"
                                                    IsChecked="{Binding HotkeyAPI.AllSelected, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                                    IsThreeState="True"
                                                    Style="{StaticResource CheckBoxStyle}"
                                                    ToolTip="{Tr 'VolumeControl.MainWindow.Hotkeys.HotkeyGrid.Active.Header.Tooltip',
                                                                 DefaultText='This (un)registers all hotkeys in the list.'}" />
                                            </DataGridTemplateColumn.Header>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <CheckBox Margin="3,0,0,0" IsChecked="{Binding Registered, UpdateSourceTrigger=PropertyChanged}">
                                                        <CheckBox.Style>
                                                            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding HasError, Mode=OneWay}" Value="True">
                                                                        <Setter Property="BorderBrush" Value="{StaticResource CancelRed}" />
                                                                        <Setter Property="ToolTip" Value="{Binding ErrorMessage, Mode=OneWay}" />
                                                                        <Setter Property="ToolTipService.InitialShowDelay" Value="100" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding HasError, Mode=OneWay}" Value="False" />
                                                                </Style.Triggers>
                                                            </Style>
                                                        </CheckBox.Style>
                                                    </CheckBox>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Name  -->
                                        <DataGridTemplateColumn
                                            Width="Auto"
                                            MinWidth="130"
                                            Header="{Tr 'VolumeControl.MainWindow.Hotkeys.HotkeyGrid.Name.Header',
                                                        DefaultText='Name'}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <TextBox
                                                        VerticalAlignment="Center"
                                                        Background="#00000000"
                                                        BorderThickness="0"
                                                        Style="{StaticResource TextBoxStyle}"
                                                        Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Key  -->
                                        <DataGridTemplateColumn
                                            Width="Auto"
                                            MinWidth="180"
                                            Header="{Tr 'VolumeControl.MainWindow.Hotkeys.HotkeyGrid.Key.Header',
                                                        DefaultText='Key'}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <ComboBox
                                                        ItemsSource="{StaticResource KeyOptions}"
                                                        KeyDown="Handle_KeySelectorKeyDown"
                                                        SelectedValue="{Binding Key, UpdateSourceTrigger=PropertyChanged}"
                                                        Style="{StaticResource ComboBoxStyle}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Alt  -->
                                        <DataGridTemplateColumn
                                            Width="Auto"
                                            MinWidth="30"
                                            CanUserResize="False"
                                            Header="{Tr 'VolumeControl.MainWindow.Hotkeys.HotkeyGrid.Alt.Header',
                                                        DefaultText='Alt'}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <CheckBox IsChecked="{Binding Alt, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxStyle}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Ctrl  -->
                                        <DataGridTemplateColumn
                                            Width="Auto"
                                            MinWidth="30"
                                            CanUserResize="False"
                                            Header="{Tr 'VolumeControl.MainWindow.Hotkeys.HotkeyGrid.Ctrl.Header',
                                                        DefaultText='Ctrl'}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <CheckBox IsChecked="{Binding Ctrl, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxStyle}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Shift  -->
                                        <DataGridTemplateColumn
                                            Width="Auto"
                                            MinWidth="30"
                                            CanUserResize="False"
                                            Header="{Tr 'VolumeControl.MainWindow.Hotkeys.HotkeyGrid.Shift.Header',
                                                        DefaultText='Shift'}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <CheckBox IsChecked="{Binding Shift, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxStyle}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Windows  -->
                                        <DataGridTemplateColumn
                                            Width="Auto"
                                            MinWidth="30"
                                            CanUserResize="False"
                                            Header="{Tr 'VolumeControl.MainWindow.Hotkeys.HotkeyGrid.Windows.Header',
                                                        DefaultText='Win'}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <CheckBox IsChecked="{Binding Win, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource CheckBoxStyle}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Action  -->
                                        <DataGridTemplateColumn
                                            Width="Auto"
                                            MinWidth="24"
                                            Header="{Tr 'VolumeControl.MainWindow.Hotkeys.HotkeyGrid.Action.Header',
                                                        DefaultText='Action'}">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <ComboBox
                                                        IsEditable="False"
                                                        ItemsSource="{Binding HotkeyAPI.Actions.Bindings, Source={StaticResource Settings}}"
                                                        SelectedItem="{Binding Action, UpdateSourceTrigger=PropertyChanged}"
                                                        Style="{StaticResource ComboBoxStyle}">
                                                        <ComboBox.ItemContainerStyle>
                                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                                <Setter Property="ToolTipService.ShowsToolTipOnKeyboardFocus" Value="True" />
                                                                <Setter Property="ToolTipService.ToolTip" Value="{Binding Data.ActionDescription}" />
                                                                <Setter Property="ToolTipService.Placement" Value="Left" />
                                                                <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
                                                                <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
                                                            </Style>
                                                        </ComboBox.ItemContainerStyle>
                                                        <ComboBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackPanel DataContext="{Binding Data}" Orientation="Horizontal">
                                                                    <StackPanel.Resources>
                                                                        <conv:ConverterChain x:Key="NullToVisibilityConverter">
                                                                            <conv:NullToBooleanConverter />
                                                                            <conv:BooleanInverter />
                                                                            <BooleanToVisibilityConverter />
                                                                        </conv:ConverterChain>
                                                                    </StackPanel.Resources>
                                                                    <TextBlock
                                                                        Name="GroupNameTextBlock"
                                                                        FontWeight="SemiBold"
                                                                        Foreground="{Binding ActionGroupBrush, TargetNullValue={StaticResource TextBoxForeground}}"
                                                                        Text="{Binding ActionGroup}" />
                                                                    <TextBlock
                                                                        FontWeight="{Binding FontWeight, ElementName=GroupNameTextBlock}"
                                                                        Foreground="{Binding Foreground, ElementName=GroupNameTextBlock}"
                                                                        Style="{StaticResource TextBlockStyle}"
                                                                        Text=": "
                                                                        Visibility="{Binding ActionGroup, Converter={StaticResource NullToVisibilityConverter}}" />
                                                                    <TextBlock
                                                                        Margin="2,0"
                                                                        Style="{StaticResource TextBlockStyle}"
                                                                        Text="{Binding ActionName}" />
                                                                </StackPanel>
                                                            </DataTemplate>
                                                        </ComboBox.ItemTemplate>
                                                        <ComboBox.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel />
                                                            </ItemsPanelTemplate>
                                                        </ComboBox.ItemsPanel>
                                                    </ComboBox>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Action Settings  -->
                                        <DataGridTemplateColumn Width="Auto" CanUserResize="False">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <Button
                                                        Width="{Binding Height, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"
                                                        Click="Handle_HotkeyActionSettingsClick"
                                                        CommandParameter="{Binding ID}"
                                                        Content="🛠"
                                                        IsEnabled="{Binding Action.UsesActionSettings}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <!--  Remove  -->
                                        <DataGridTemplateColumn Width="Auto" CanUserResize="False">
                                            <DataGridTemplateColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <Button
                                                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                                        Click="Handle_ResetHotkeysClick"
                                                        Content="↺"
                                                        ToolTip="{Tr 'VolumeControl.MainWindow.Hotkeys.ControlRow.ResetToDefault.Tooltip',
                                                                     DefaultText='Resets all hotkeys to the default preset.'}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.HeaderTemplate>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate DataType="{x:Type input:BindableHotkey}">
                                                    <Button
                                                        Name="hotkeyGridRemove"
                                                        Width="{Binding Height, RelativeSource={RelativeSource Self}, UpdateSourceTrigger=PropertyChanged}"
                                                        Click="Handle_hotkeyGridRemoveClick"
                                                        CommandParameter="{Binding ID}"
                                                        Content="❌"
                                                        Foreground="{StaticResource CancelRed}" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Border>

                        <Grid Margin="3,0,3,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <StackPanel
                                Grid.Column="0"
                                Margin="0,0,3,0"
                                Orientation="Horizontal">
                                <Label
                                    HorizontalAlignment="Center"
                                    Content="{Tr 'VolumeControl.MainWindow.Hotkeys.ControlRow.VolumeStep.Content',
                                                 DefaultText='Volume Step'}"
                                    Style="{StaticResource LabelStyle}"
                                    ToolTip="{Tr 'VolumeControl.MainWindow.Hotkeys.ControlRow.VolumeStep.Tooltip',
                                                 DefaultText='This is the number of volume ticks that change each time you press the volume up or down hotkeys.'}" />
                                <controls:NumericUpDown
                                    x:Name="nudVolumeStepSize"
                                    MinWidth="55"
                                    HorizontalAlignment="Center"
                                    DataContext="{StaticResource Settings}"
                                    MaxValue="100"
                                    MinValue="1"
                                    ToolTip="{Tr 'VolumeControl.MainWindow.Hotkeys.ControlRow.VolumeStep.Tooltip',
                                                 DefaultText='This is the number of volume ticks that change each time you press the volume up or down hotkeys.'}"
                                    Value="{Binding AudioAPI.VolumeStepSize, Mode=TwoWay, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                            <Button
                                Grid.Column="1"
                                Click="Handle_CreateNewHotkeyClick"
                                Content="{Tr 'VolumeControl.MainWindow.Hotkeys.CreateNewHotkeyButton.Content',
                                             DefaultText='Create New Hotkey'}"
                                ToolTip="{Tr 'VolumeControl.MainWindow.Hotkeys.CreateNewHotkeyButton.Tooltip',
                                             DefaultText='Creates a new blank hotkey entry.'}" />
                        </Grid>
                    </VirtualizingStackPanel>
                </TabItem>
                <!--  ▲ Hotkeys Tab ▲  -->


                <!--  ▼ Settings Tab ▼  -->
                <TabItem Name="SettingsTab" Header="{Tr 'VolumeControl.MainWindow.Settings.TabHeader', DefaultText='Settings'}">
                    <!--  Settings Tab Layout  -->
                    <Border BorderBrush="{StaticResource TabBackgroundBrush}" BorderThickness="2">
                        <VirtualizingStackPanel FlowDirection="LeftToRight" Orientation="Vertical">
                            <!--  ▼ Socket ▼  -->
                            <Border Style="{StaticResource SectionStyle}">
                                <Grid x:Name="socketGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Label
                                        HorizontalAlignment="Left"
                                        Content="{Tr 'VolumeControl.MainWindow.Settings.SocketHost.Header',
                                                     DefaultText='SocketHost'}"
                                        FlowDirection="LeftToRight"
                                        Style="{StaticResource HeaderLabelStyle}" />

                                    <Grid Grid.Row="1" Margin="5,3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <TextBox
                                            x:Name="socketHost"
                                            AutoWordSelection="True"
                                            Background="#0000"
                                            BorderThickness="0"
                                            Foreground="{StaticResource TextBoxForeground}"
                                            HorizontalScrollBarVisibility="Hidden"
                                            IsInactiveSelectionHighlightEnabled="True"
                                            MouseDoubleClick="Handle_TargetNameBoxDoubleClick"
                                            Style="{StaticResource TextBoxStyle}"
                                            Text="{Binding SocketHost, Source={StaticResource Settings}, UpdateSourceTrigger=LostFocus}" />
                                        <Label
                                            x:Name="lblSocketStatus"
                                            Grid.Column="2"
                                            Margin="3"
                                            Content="{Binding Path=ClientStatus, UpdateSourceTrigger=PropertyChanged}"
                                            Style="{StaticResource HeaderLabelStyle}" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <!--  ▲ Socket ▲  -->
                            
                            <!--  ▼ Language ▼  -->
                            <Border Style="{StaticResource SectionStyle}">
                                <Grid x:Name="langGrid">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Label
                                        HorizontalAlignment="Left"
                                        Content="{Tr 'VolumeControl.MainWindow.Settings.Language.Header',
                                                     DefaultText='Language'}"
                                        FlowDirection="LeftToRight"
                                        Style="{StaticResource HeaderLabelStyle}" />

                                    <Grid Grid.Row="1" Margin="5,3">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ComboBox
                                            Margin="5,3"
                                            HorizontalAlignment="Stretch"
                                            ItemsSource="{Binding AvailableLanguages, Mode=OneWay, Source={x:Static loc:Loc.Instance}}"
                                            SelectedItem="{Binding CurrentLanguage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Source={x:Static loc:Loc.Instance}}"
                                            Style="{StaticResource ComboBoxStyle}" />

                                        <Button
                                            Grid.Column="1"
                                            Padding="6,0"
                                            Click="Handle_ReloadLanguageConfigs"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Language.Reload.Content',
                                                         DefaultText='Reload'}"
                                            Style="{StaticResource ButtonStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Language.Regenerate.Tooltip',
                                                         DefaultText='Forcibly (re)create all of the default localization packages.'}" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <!--  ▲ Language ▲  -->

                            <!--  ▼ Audio ▼  -->
                            <Border Style="{StaticResource SectionStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Canvas>
                                        <Label Content="{Tr 'VolumeControl.MainWindow.Settings.Audio.Header', DefaultText='Audio'}" Style="{StaticResource HeaderLabelStyle}" />
                                    </Canvas>

                                    <Expander
                                        Grid.Row="1"
                                        Margin="5,4"
                                        HorizontalAlignment="Stretch"
                                        BorderThickness="0"
                                        FlowDirection="RightToLeft"
                                        IsTabStop="True">
                                        <Expander.Header>
                                            <TextBlock
                                                FontWeight="ExtraLight"
                                                Style="{StaticResource WatermarkTextBlockStyle}"
                                                Text="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.Header.Content',
                                                          DefaultText='Additional Settings'}"
                                                ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.Header.Tooltip',
                                                             DefaultText=' '}" />
                                        </Expander.Header>

                                        <Grid Margin="5">
                                            <WrapPanel
                                                MaxWidth="{Binding ActualWidth, ElementName=deviceGrid}"
                                                HorizontalAlignment="Stretch"
                                                FlowDirection="LeftToRight">

                                                <CheckBox
                                                    VerticalAlignment="Center"
                                                    Content="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.ShowPeakMeters.Content',
                                                                 DefaultText='Show Peak Meters'}"
                                                    IsChecked="{Binding ShowPeakMeters, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                                    Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                                    ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.ShowPeakMeters.Tooltip',
                                                                 DefaultText='Toggle the audio peaking meters shown in the Mixer.'}" />
                                                <Grid Margin="10,3">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock
                                                        Margin="5,3"
                                                        VerticalAlignment="Center"
                                                        Style="{StaticResource TextBlockStyle}"
                                                        Text="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.UpdateInterval.Content',
                                                                  DefaultText='Update Interval'}"
                                                        ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.UpdateInterval.Tooltip',
                                                                     DefaultText='The amount of time, in milliseconds, between each update of the peak meters in the Mixer.'}" />
                                                    <controls:NumericUpDown
                                                        Grid.Column="1"
                                                        Margin="5,3"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Center"
                                                        MaxValue="120000"
                                                        MinValue="50"
                                                        ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.UpdateInterval.Tooltip',
                                                                     DefaultText='The amount of time, in milliseconds, between each update of the peak meters in the Mixer.'}"
                                                        Value="{Binding PeakMeterUpdateIntervalMs, Mode=TwoWay, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}" />
                                                </Grid>
                                                <CheckBox
                                                    Content="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.EnableDeviceControl.Content',
                                                                 DefaultText='Show Device Controls'}"
                                                    IsChecked="{Binding EnableDeviceControl, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                                    Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                                    ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.AdditionalSettings.EnableDeviceControl.Tooltip',
                                                                 DefaultText='Toggle the visibility of volume &amp; mute controls in the Audio Devices section.'}" />

                                            </WrapPanel>
                                        </Grid>
                                    </Expander>

                                    <StackPanel
                                        Grid.Row="2"
                                        Margin="5,3"
                                        FlowDirection="LeftToRight"
                                        Orientation="Vertical">

                                        <!--  Audio Devices DataGrid Row  -->
                                        <Grid Margin="5,3">
                                            <Border
                                                Name="DeviceGridMask"
                                                Background="{StaticResource TextBoxBackground}"
                                                CornerRadius="{StaticResource RoundedControlCorner}" />
                                            <DataGrid
                                                x:Name="deviceGrid"
                                                Margin="0"
                                                d:ItemsSource="{x:Null}"
                                                AutoGenerateColumns="False"
                                                CanUserAddRows="False"
                                                CanUserDeleteRows="False"
                                                CanUserReorderColumns="False"
                                                CanUserResizeColumns="True"
                                                CanUserResizeRows="False"
                                                CanUserSortColumns="False"
                                                DataContext="{StaticResource Settings}"
                                                ItemsSource="{Binding AudioAPI.Devices, UpdateSourceTrigger=PropertyChanged}"
                                                MinRowHeight="22"
                                                Style="{StaticResource DataGridStyle}">
                                                <DataGrid.OpacityMask>
                                                    <VisualBrush Visual="{Binding ElementName=DeviceGridMask}" />
                                                </DataGrid.OpacityMask>
                                                <DataGrid.Columns>
                                                    <!--  Enabled checkbox  -->
                                                    <DataGridTemplateColumn Width="Auto" CanUserResize="False">
                                                        <DataGridTemplateColumn.Header>
                                                            <CheckBox
                                                                Margin="3,0,0,0"
                                                                d:IsChecked="{x:Null}"
                                                                Click="Handle_ThreeStateCheckboxClick"
                                                                IsChecked="{Binding AudioAPI.Devices.AllDevicesEnabled, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                                                IsThreeState="True"
                                                                Style="{StaticResource CheckBoxStyle}"
                                                                ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.DeviceGrid.Enabled.Header.Tooltip',
                                                                             DefaultText='Checks/Unchecks all devices.'}" />
                                                        </DataGridTemplateColumn.Header>
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <CheckBox
                                                                    Margin="3,0,0,0"
                                                                    IsChecked="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}"
                                                                    Style="{StaticResource CheckBoxStyle}"
                                                                    ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.DeviceGrid.Enabled.Tooltip',
                                                                                 DefaultText='The Mixer tab only shows Audio Sessions for enabled Devices.'}" />
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <!--  Name  -->
                                                    <DataGridTemplateColumn Width="Auto" Header="{Tr 'VolumeControl.MainWindow.Settings.Audio.DeviceGrid.Name.Header', DefaultText='Device Name'}">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Grid Margin="5,1">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="20" />
                                                                        <ColumnDefinition Width="*" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <Image
                                                                        Margin="2"
                                                                        HorizontalAlignment="Stretch"
                                                                        VerticalAlignment="Stretch"
                                                                        Source="{Binding Icon, Mode=OneTime}"
                                                                        Style="{StaticResource IconImageStyle}"
                                                                        Visibility="{Binding ShowIcons, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                                    <TextBlock
                                                                        Grid.Column="1"
                                                                        HorizontalAlignment="Stretch"
                                                                        VerticalAlignment="Center"
                                                                        Background="#0000"
                                                                        Style="{StaticResource TextBlockStyle}"
                                                                        Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
                                                                </Grid>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <!--  Interface Name  -->
                                                    <DataGridTemplateColumn Width="Auto" Header="{Tr 'VolumeControl.MainWindow.Settings.Audio.DeviceGrid.Interface.Header', DefaultText='Interface Name'}">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock
                                                                    Margin="5,1"
                                                                    Foreground="LightGray"
                                                                    Style="{StaticResource TextBlockStyle}"
                                                                    Text="{Binding DeviceFriendlyName}" />
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <!--  Mute  -->
                                                    <DataGridTemplateColumn
                                                        Width="Auto"
                                                        Header="{Tr 'VolumeControl.MainWindow.Settings.Audio.DeviceGrid.Mute.Header',
                                                                    DefaultText='Mute'}"
                                                        Visibility="{Binding EnableDeviceControl, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <CheckBox
                                                                    Margin="5,1"
                                                                    IsChecked="{Binding Muted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    Style="{StaticResource CheckBoxStyle}" />
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <!--  Volume  -->
                                                    <DataGridTemplateColumn
                                                        MinWidth="170"
                                                        Header="{Tr 'VolumeControl.MainWindow.Settings.Audio.DeviceGrid.Volume.Header',
                                                                    DefaultText='Volume'}"
                                                        Visibility="{Binding EnableDeviceControl, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Grid Margin="5,1" VerticalAlignment="Center">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto" />
                                                                        <RowDefinition Height="Auto" />
                                                                    </Grid.RowDefinitions>
                                                                    <Grid.ColumnDefinitions>
                                                                        <!--  Slider  -->
                                                                        <ColumnDefinition Width="*" />
                                                                        <!--  Divider  -->
                                                                        <ColumnDefinition Width="2" />
                                                                        <!--  TextBox  -->
                                                                        <ColumnDefinition Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <!--  Slider  -->
                                                                    <Slider
                                                                        x:Name="sessionVolumeSlider"
                                                                        Grid.Column="0"
                                                                        LargeChange="5"
                                                                        Maximum="100"
                                                                        Minimum="0"
                                                                        SmallChange="1"
                                                                        Tag="{Binding PeakMeterValue, Mode=OneWay}"
                                                                        Value="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                                        <i:Interaction.Behaviors>
                                                                            <behaviour:IntervalUpdateBinding
                                                                                EnableTimer="{Binding ShowPeakMeters, Source={StaticResource Settings}}"
                                                                                Interval="{Binding PeakMeterUpdateIntervalMs, Source={StaticResource Settings}}"
                                                                                Property="{x:Static FrameworkElement.TagProperty}" />
                                                                        </i:Interaction.Behaviors>
                                                                    </Slider>
                                                                    <!--  TextBox  -->
                                                                    <TextBox
                                                                        Grid.Column="2"
                                                                        Width="30"
                                                                        Background="#00000000"
                                                                        BorderThickness="0"
                                                                        Style="{StaticResource TextBoxStyle}"
                                                                        Text="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                                </Grid>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                        </Grid>

                                        <StackPanel
                                            Margin="5,3"
                                            HorizontalAlignment="Center"
                                            FlowDirection="LeftToRight"
                                            Orientation="Horizontal">
                                            <CheckBox
                                                Margin="6,3"
                                                Padding="6,0"
                                                Content="{Tr 'VolumeControl.MainWindow.Settings.Audio.EnableDefault.Content',
                                                             DefaultText='Enable Default'}"
                                                IsChecked="{Binding EnableDefaultDevice, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                                Style="{StaticResource CheckBoxStyle}"
                                                ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.EnableDefault.Tooltip',
                                                             DefaultText='When checked, the default audio device is always enabled during the application loading phase.'}" />
                                            <Button
                                                Margin="6,3"
                                                Padding="6,0"
                                                Click="Handle_ReloadDevicesClick"
                                                Content="{Tr 'VolumeControl.MainWindow.Settings.Audio.ReloadDevices.Content',
                                                             DefaultText='Reload Devices'}"
                                                ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.ReloadDevices.Tooltip',
                                                             DefaultText='Forcibly reload all devices.'}" />
                                            <Button
                                                Margin="6,3"
                                                Padding="6,0"
                                                Click="Handle_ReloadSessionsClick"
                                                Content="{Tr 'VolumeControl.MainWindow.Settings.Audio.ReloadSessions.Content',
                                                             DefaultText='Reload Sessions'}"
                                                ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Audio.ReloadSessions.Tooltip',
                                                             DefaultText='Forcibly reload all sessions.'}" />
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!--  ▲ Audio ▲  -->

                            <!--  ▼ Notifications ▼  -->
                            <Border Style="{StaticResource SectionStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Canvas>
                                        <Label Content="{Tr 'VolumeControl.MainWindow.Settings.Notifications.Header', DefaultText='Notifications'}" Style="{StaticResource HeaderLabelStyle}" />
                                    </Canvas>

                                    <Expander
                                        Grid.Row="1"
                                        Margin="5,4"
                                        FlowDirection="RightToLeft">
                                        <Expander.Header>
                                            <TextBlock
                                                FontWeight="ExtraLight"
                                                Style="{StaticResource WatermarkTextBlockStyle}"
                                                Text="{Tr 'VolumeControl.MainWindow.Settings.Notifications.AdditionalSettings.Header.Content',
                                                          DefaultText='Additional Settings'}"
                                                ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Notifications.AdditionalSettings.Header.Tooltip',
                                                             DefaultText=' '}" />
                                        </Expander.Header>

                                        <Grid FlowDirection="LeftToRight">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>

                                            <TextBlock Style="{StaticResource TextBlockStyle}" ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Notifications.AdditionalSettings.DisplayTarget.Tooltip', DefaultText=' '}">
                                                <Hyperlink x:Name="DisplayTargetsHyperlink" Click="Handle_DisplayTargetsHyperlinkClick">
                                                    <TextBlock Text="{Tr 'VolumeControl.MainWindow.Settings.Notifications.AdditionalSettings.DisplayTarget.Content', DefaultText='Display Target:'}" />
                                                </Hyperlink>
                                            </TextBlock>
                                            <Grid Grid.Column="2" Margin="5,8,5,3">
                                                <Border Name="displayTargetListBoxMask" Style="{StaticResource RoundBorderMaskStyle}" />
                                                <ListBox
                                                    Name="displayTargetListBox"
                                                    ItemsSource="{Binding ListNotificationVM.DisplayTargets, Source={StaticResource Settings}, Mode=OneWay}"
                                                    SelectedItem="{Binding ListNotificationVM.CurrentDisplayTarget, Source={StaticResource Settings}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Style="{StaticResource ListBoxStyle}"
                                                    ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Notifications.AdditionalSettings.DisplayTargetList.Tooltip',
                                                                 DefaultText=' '}">
                                                    <ListBox.OpacityMask>
                                                        <VisualBrush Visual="{Binding ElementName=displayTargetListBoxMask}" />
                                                    </ListBox.OpacityMask>
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                                                                    <Setter Property="Background" Value="#1AAA" />
                                                                    <Setter Property="FontWeight" Value="DemiBold" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                                                    <Setter Property="Background" Value="#3AAA" />
                                                                </DataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Background" Value="#4AAA" />
                                                                    <Setter Property="FontWeight" Value="Bold" />
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                            <Setter Property="Padding" Value="3,1" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Border
                                                                            Padding="{TemplateBinding Padding}"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            FocusVisualStyle="{TemplateBinding FocusVisualStyle}">
                                                                            <ContentPresenter
                                                                                Content="{TemplateBinding Content}"
                                                                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate DataType="{x:Type sdk:ListDisplayTarget}">
                                                            <Grid Margin="3,1">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                </Grid.ColumnDefinitions>

                                                                <Image
                                                                    Grid.Column="0"
                                                                    Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                                                    Margin="2,1"
                                                                    HorizontalAlignment="Left"
                                                                    Source="{Binding Icon}"
                                                                    Visibility="{Binding ShowIcons, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                                                <TextBlock
                                                                    Grid.Column="2"
                                                                    Style="{StaticResource TextBlockStyle}"
                                                                    Text="{Binding Name}" />

                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>
                                            </Grid>

                                            <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                                <Button
                                                    Click="Handle_ResetNotificationPositionClick"
                                                    Content="{Tr 'VolumeControl.MainWindow.Settings.Notifications.AdditionalSettings.ResetPosition.Content'}"
                                                    Style="{StaticResource RedButtonStyle}"
                                                    ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Notifications.AdditionalSettings.ResetPosition.Tooltip'}" />
                                            </Grid>
                                        </Grid>
                                    </Expander>

                                    <Grid Grid.Row="2" Style="{StaticResource SectionSubGridStyle}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <!--  Enable Notifications Checkbox Control  -->
                                        <CheckBox
                                            x:Name="cbEnableNotifications"
                                            Margin="3,0"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Notifications.Enable.Content',
                                                         DefaultText='Enable'}"
                                            IsChecked="{Binding ListNotificationVM.Enabled, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                            Style="{StaticResource CheckBoxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Notifications.Enable.Tooltip',
                                                         DefaultText='Toggle whether or not notifications appear when switching the target session.'}" />
                                        <CheckBox
                                            Grid.Column="2"
                                            Margin="3,0"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Notifications.OnVolumeChange.Content',
                                                         DefaultText='On Volume Change'}"
                                            IsChecked="{Binding ListNotificationVM.ShowsVolumeChange, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                            IsEnabled="{Binding IsChecked, ElementName=cbEnableNotifications}"
                                            Style="{StaticResource CheckBoxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Notifications.OnVolumeChange.Tooltip',
                                                         DefaultText='When this is checked, notifications also appear when the volume level of the target is changed.'}" />

                                        <DockPanel
                                            Grid.Column="5"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            IsEnabled="{Binding IsChecked, ElementName=cbEnableNotifications}"
                                            LastChildFill="True">
                                            <CheckBox
                                                Content="{Tr 'VolumeControl.MainWindow.Settings.Notifications.Timeout.Content',
                                                             DefaultText='Timeout'}"
                                                IsChecked="{Binding ListNotificationVM.TimeoutEnabled, Source={StaticResource Settings}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                                ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Notifications.Timeout.Tooltip',
                                                             DefaultText='The amount of time in milliseconds that notifications will remain visible after being triggered.'}" />
                                            <controls:NumericUpDown
                                                MinWidth="88"
                                                HorizontalAlignment="Stretch"
                                                DockPanel.Dock="Right"
                                                MinValue="100"
                                                ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Notifications.Timeout.Tooltip',
                                                             DefaultText='The amount of time in milliseconds that notifications will remain visible after being triggered.'}"
                                                Value="{Binding ListNotificationVM.Timeout, Mode=TwoWay, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}" />
                                        </DockPanel>
                                    </Grid>
                                </Grid>
                            </Border>
                            <!--  ▲ Notifications ▲  -->

                            <!--  ▼ Log Settings ▼  -->
                            <Border Style="{StaticResource SectionStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Label Content="{Tr 'VolumeControl.MainWindow.Settings.Log.Header', DefaultText='Event Logging'}" Style="{StaticResource HeaderLabelStyle}" />
                                    <Grid Grid.Row="1" Style="{StaticResource SectionSubGridStyle}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <!--  Enable Log  -->
                                        <CheckBox
                                            x:Name="cbEnableLog"
                                            Margin="3,0"
                                            VerticalAlignment="Center"
                                            d:IsEnabled="True"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Log.Enable.Content',
                                                         DefaultText='Enable'}"
                                            IsChecked="{Binding LogEnabled, ElementName=window, UpdateSourceTrigger=PropertyChanged}"
                                            IsEnabled="{Binding Text.IsEmpty, Mode=OneWay, ElementName=logPath, Converter={StaticResource InvertConverter}}"
                                            Style="{StaticResource CheckBoxStyle}" />
                                        <!--  Log Filter Level Setter  -->
                                        <Grid
                                            Grid.Column="1"
                                            Margin="3,0"
                                            IsEnabled="{Binding IsChecked, ElementName=cbEnableLog}">
                                            <TextBlock
                                                Margin="5,0,24,0"
                                                Panel.ZIndex="1"
                                                IsHitTestVisible="False"
                                                Style="{StaticResource TextBlockStyle}"
                                                Text="{Tr 'VolumeControl.MainWindow.Settings.Log.Filter.Text',
                                                          DefaultText='Filter'}" />
                                            <ComboBox
                                                x:Name="logFilterBox"
                                                Panel.ZIndex="0"
                                                IsEditable="False"
                                                IsEnabled="{b:MultiBinding {Binding Text.IsEmpty, Mode=OneWay, ElementName=logPath, Converter={StaticResource InvertConverter}},
                                                                           {Binding IsChecked, ElementName=cbEnableLog},
                                                                           Converter={StaticResource MultiBindingBooleanConverter}}"
                                                ItemsSource="{StaticResource EventTypeOptions}"
                                                SelectionChanged="Handle_LogFilterBoxSelectionChanged"
                                                Style="{StaticResource ComboBoxStyle}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <CheckBox
                                                            Content="{Binding Name}"
                                                            IsChecked="{Binding IsSet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            Style="{StaticResource CheckBoxStyle}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </Grid>
                                        <!--  Log Path Textbox  -->
                                        <Grid
                                            Grid.Column="2"
                                            Margin="3,0"
                                            IsEnabled="{Binding IsChecked, ElementName=cbEnableLog}">
                                            <Grid.Resources>
                                                <Style
                                                    x:Key="TextBoxValidIndicatorStyle"
                                                    BasedOn="{StaticResource TextBoxStyle}"
                                                    TargetType="{x:Type TextBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Text.IsEmpty, Mode=OneWay, Source={x:Reference logPath}}" Value="True">
                                                            <Setter Property="Background" Value="#3F3030" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Resources>
                                            <Border Name="logPathMask" Style="{StaticResource RoundBorderMaskStyle}" />

                                            <Grid Background="{StaticResource TextBoxBackground}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBox
                                                    x:Name="logPath"
                                                    Background="#0000"
                                                    BorderThickness="0"
                                                    HorizontalScrollBarVisibility="Auto"
                                                    Style="{StaticResource TextBoxValidIndicatorStyle}"
                                                    Text="{Binding LogFilePath, ElementName=window, UpdateSourceTrigger=LostFocus}"
                                                    ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Log.Path.Tooltip',
                                                                 DefaultText='Specifies the location and name of the log file. Relative paths are relative to the location of the executable.'}" />
                                                <TextBlock
                                                    Width="{Binding Width, ElementName=logPath}"
                                                    Height="{Binding Height, ElementName=logPath}"
                                                    Margin="5,0"
                                                    d:Visibility="Collapsed"
                                                    Style="{StaticResource WatermarkTextBlockStyle}"
                                                    Text="{Tr 'VolumeControl.MainWindow.Settings.Log.Path.WatermarkText',
                                                              DefaultText='Path to Log File'}"
                                                    Visibility="{Binding Text.IsEmpty, Mode=OneWay, ElementName=logPath, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                <!--  LogPath Browse Button  -->
                                                <Button
                                                    Grid.Column="1"
                                                    Margin="5,2"
                                                    VerticalAlignment="Stretch"
                                                    Click="Handle_BrowseForLogFilePathClick"
                                                    Content=" ... "
                                                    IsEnabled="{Binding IsChecked, ElementName=cbEnableLog}" />

                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Border>
                            <!--  ▲ Log Settings ▲  -->

                            <!--  ▼ Application Settings ▼  -->
                            <Border Style="{StaticResource SectionStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Label Content="{Tr 'VolumeControl.MainWindow.Settings.Application.Header', DefaultText='Application'}" Style="{StaticResource HeaderLabelStyle}" />

                                    <Grid
                                        Grid.Row="1"
                                        Margin="0"
                                        HorizontalAlignment="Center"
                                        Style="{StaticResource SectionSubGridStyle}">
                                        <Grid.Resources>
                                            <conv:ConverterChain x:Key="AllowsTransparencyEnabledConverter">
                                                <conv:BooleanInverter />
                                                <BooleanToVisibilityConverter />
                                            </conv:ConverterChain>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="3" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="3" />
                                        </Grid.RowDefinitions>
                                        <!--  [ COLUMN 0 ]  -->
                                        <CheckBox
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Click="Handle_ThreeStateCheckboxClick"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Application.RunAtStartup.Content',
                                                         DefaultText='Run at Startup'}"
                                            IsChecked="{Binding RunAtStartup, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                            IsThreeState="True"
                                            Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Application.RunAtStartup.Tooltip',
                                                         DefaultText='When enabled, Volume Control will start when you log in.'}" />
                                        <CheckBox
                                            Grid.Row="2"
                                            Grid.Column="0"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Application.StartMinimized.Content',
                                                         DefaultText='Start Minimized'}"
                                            IsChecked="{Binding StartMinimized, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                            Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Application.StartMinimized.Tooltip',
                                                         DefaultText='When enabled, Volume Control will minimize itself when it starts up.'}" />
                                        <CheckBox
                                            Grid.Row="3"
                                            Grid.Column="0"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Application.MultiInstance.Content',
                                                         DefaultText='Multi-Instance'}"
                                            IsChecked="{Binding AllowMultipleDistinctInstances, Source={StaticResource Settings}}"
                                            Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Application.MultiInstance.Tooltip',
                                                         DefaultText='Allows multiple Volume Control instances to run at the same time, so long as they use a different config file.'}" />

                                        <!--  [ COLUMN 2 ]  -->
                                        <CheckBox
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Application.ShowInTaskbar.Content',
                                                         DefaultText='Show in Taskbar'}"
                                            IsChecked="{b:MultiBinding {Binding ShowInTaskbar, ElementName=window, UpdateSourceTrigger=PropertyChanged},
                                                                       {Binding ShowInTaskbar, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged},
                                                                       Converter={StaticResource MultiBindingBooleanConverter},
                                                                       UpdateSourceTrigger=PropertyChanged}"
                                            Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Application.ShowInTaskbar.Tooltip',
                                                         DefaultText=' '}" />
                                        <CheckBox
                                            Grid.Row="2"
                                            Grid.Column="2"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Application.AlwaysOnTop.Content',
                                                         DefaultText='Always on Top'}"
                                            IsChecked="{b:MultiBinding {Binding Topmost, ElementName=window, UpdateSourceTrigger=PropertyChanged},
                                                                       {Binding AlwaysOnTop, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged},
                                                                       Converter={StaticResource MultiBindingBooleanConverter},
                                                                       UpdateSourceTrigger=PropertyChanged}"
                                            Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Application.AlwaysOnTop.Tooltip',
                                                         DefaultText=' '}" />
                                        <CheckBox
                                            Grid.Row="3"
                                            Grid.Column="2"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Application.ShowIcons.Content',
                                                         DefaultText='Show Icons'}"
                                            IsChecked="{Binding ShowIcons, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                            Style="{StaticResource ApplicationSettingsCheckboxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Application.ShowIcons.Tooltip',
                                                         DefaultText='When enabled, the program will attempt to display the icon associated with audio devices and sessions. ( Some icons may be missing when running as user. )'}" />

                                    </Grid>
                                </Grid>
                                <!--  ▼ Application Settings ▼  -->
                            </Border>
                            <!--  ▲ Application Settings ▲  -->

                            <!--  ▼ Updates ▼  -->
                            <Border Style="{StaticResource SectionStyle}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Label Content="{Tr 'VolumeControl.MainWindow.Settings.Updates.Header', DefaultText='Updates'}" Style="{StaticResource HeaderLabelStyle}" />

                                    <Grid
                                        Grid.Row="1"
                                        Margin="5,3"
                                        HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <Button
                                            Grid.Column="0"
                                            Margin="8,0"
                                            Padding="6,0"
                                            Click="Handle_CheckForUpdatesClick"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Updates.CheckNow.Content',
                                                         DefaultText='Check Now'}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Updates.CheckNow.Tooltip',
                                                         DefaultText='Manually check for new versions of Volume Control.'}" />
                                        <CheckBox
                                            x:Name="cbCheckForUpdatesOnStartup"
                                            Grid.Column="1"
                                            Margin="8,0"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Updates.OnStartup.Content',
                                                         DefaultText='On Startup'}"
                                            IsChecked="{Binding CheckForUpdates, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                                            Style="{StaticResource CheckBoxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Updates.OnStartup.Tooltip',
                                                         DefaultText='Check for new versions of Volume Control on startup.'}" />
                                        <CheckBox
                                            Grid.Column="2"
                                            Margin="8,0"
                                            Content="{Tr 'VolumeControl.MainWindow.Settings.Updates.ShowPrompt.Content',
                                                         DefaultText='Show Prompt'}"
                                            IsChecked="{Binding ShowUpdateMessageBox, Source={StaticResource Settings}}"
                                            Style="{StaticResource CheckBoxStyle}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Updates.ShowPrompt.Tooltip',
                                                         DefaultText='When this is checked, you[apos]ll be prompted to update in the form of a message box; otherwise, you[apos]ll see an icon in the top-right corner.'}" />
                                    </Grid>
                                </Grid>
                            </Border>
                            <!--  ▲ Updates ▲  -->
                        </VirtualizingStackPanel>
                    </Border>
                </TabItem>
                <!--  ▲ Settings Tab ▲  -->


                <!--  ▼ About Tab ▼  -->
                <!--<TabItem Header="{Tr 'VolumeControl.MainWindow.About.TabHeader', DefaultText='About'}">
                    <Border
                        Margin="1"
                        Padding="10"
                        BorderBrush="{StaticResource SelectionBorderBrush}"
                        BorderThickness="3">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Image
                                Grid.Column="0"
                                Height="{Binding Width, RelativeSource={RelativeSource Self}, Mode=TwoWay}"
                                MaxWidth="128"
                                Source="{StaticResource VolumeControlIcon}"
                                Stretch="UniformToFill" />
                            <StackPanel
                                Grid.Column="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Vertical">
                                <TextBlock Style="{StaticResource TextBlockStyle}">
                                    <Hyperlink extensions:HyperlinkExtensions.OpensInBrowser="True" NavigateUri="{StaticResource VolumeControlRepository}">
                                        <TextBlock Text="{Tr 'VolumeControl.MainWindow.About.OpenWebsite.Content', DefaultText='Official Website'}" ToolTip="{Tr 'VolumeControl.MainWindow.About.OpenWebsite.Tooltip', DefaultText='Open the official Volume Control website in your default browser'}" />
                                    </Hyperlink>
                                </TextBlock>
                                <TextBlock Foreground="{StaticResource UpdateIconBrush}" Style="{StaticResource TextBlockStyle}">
                                    <Hyperlink extensions:HyperlinkExtensions.OpensInBrowser="True" NavigateUri="{StaticResource VolumeControlBugReport}">
                                        <TextBlock Text="{Tr 'VolumeControl.MainWindow.About.ReportABug.Content', DefaultText='Report a Bug'}" ToolTip="{Tr 'VolumeControl.MainWindow.About.ReportABug.Tooltip', DefaultText='Let us know that something is not working correctly'}" />
                                    </Hyperlink>
                                </TextBlock>


                            </StackPanel>

                            <Expander
                                Grid.Row="1"
                                Grid.ColumnSpan="2"
                                FlowDirection="RightToLeft"
                                Header="Show Debug Info">
                                <Border Background="{StaticResource TextBoxBackground}" FlowDirection="LeftToRight">

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock
                                            Margin="5,3,3,3"
                                            Style="{StaticResource TextBlockStyle}"
                                            Text="{Tr 'VolumeControl.MainWindow.About.ShowDebugInfo.ConfigPath.Content',
                                                      DefaultText='Config Location'}" />
                                        <TextBlock
                                            x:Name="cfgPath"
                                            Grid.Column="1"
                                            Margin="3,3,5,3"
                                            Background="#0000"
                                            Style="{StaticResource TextBlockStyle}"
                                            Text="{Binding ConfigLocation, Source={StaticResource Settings}, Mode=OneWay}"
                                            ToolTip="{Tr 'VolumeControl.MainWindow.Settings.Log.Path.Tooltip',
                                                         DefaultText='Specifies the location and name of the log file. Relative paths are relative to the location of the executable.'}" />
                                    </Grid>
                                </Border>
                            </Expander>
                        </Grid>
                    </Border>
                </TabItem>-->
                <!--  ▲ About Tab ▲  -->
            </ctrlz:TabControlEx>
        </VirtualizingStackPanel>
    </Border>

    <!--  ( Window Chrome )  -->
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="{StaticResource CaptionHeight}"
            CornerRadius="{StaticResource RoundedWindowCorner}"
            GlassFrameThickness="0"
            ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
</Window>
